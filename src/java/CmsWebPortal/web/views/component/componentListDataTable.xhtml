<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
                xmlns:f="http://xmlns.jcp.org/jsf/core">

    <p:dataTable id="componentListDataTable" 
                 var="componentObject" 
                 value="#{componentController.listDataModel}" 
                 filteredValue="#{componentController.filteredObjectList}"
                 paginator="true" 
                 paginatorAlwaysVisible="false" 
                 rows="#{componentController.displayNumberOfItemsPerPage}" 
                 binding="#{componentController.listDataTable}"
                 widgetVar="componentListWidget"
                 emptyMessage="No components found.">

        <p:column sortBy="#{componentObject.id}" headerText="Id"
                  rendered="#{componentController.displayId}">
            <h:outputText value="#{componentObject.id}"/>
        </p:column>

        <p:column sortBy="#{componentObject.name}" headerText="Name" 
                  filterBy="#{componentObject.name}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByName}"
                  rendered="true">
            <h:outputText value="#{componentObject.name}"/>
        </p:column>

        <p:column sortBy="#{componentObject.description}" headerText="Description" 
                  filterBy="#{componentObject.description}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByDescription}"
                  rendered="#{componentController.displayDescription}">
            <h:outputText value="#{componentObject.description}"/>
        </p:column>

        <p:column sortBy="#{componentObject.documentationUriShortDisplay}" headerText="Uri" 
                  filterBy="#{componentObject.documentationUriShortDisplay}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByDocumentationUri}"
                  filterStyle="width:30px" filterStyleClass="shortFilterColumn"
                  rendered="#{componentController.displayDocumentationUri}">
            <h:outputLink value="#{componentObject.documentationUri}" title="Documentation URI" target="_new" styleClass="entityDataText">
                <h:outputText value="#{componentObject.documentationUriShortDisplay}"/>
            </h:outputLink>                      
        </p:column>

        <p:column sortBy="#{componentObject.componentState.name}" headerText="State" 
                  filterBy="#{componentObject.componentState.name}" filterMatchMode="exact"
                  filterValue="#{componentController.filterByState}"
                  filterOptions="#{componentStateController.availableItemsForSelectOne}"
                  rendered="#{componentController.displayState}">
            <h:outputText value="#{componentObject.componentState.name}"/>
        </p:column>

        <p:column sortBy="#{componentObject.componentTypeList.toString()}" headerText="Type" 
                  filterBy="#{componentObject.componentTypeList}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByType}"
                  rendered="#{componentController.displayType}">
            <h:outputText value="#{componentController.displayEntityList(componentObject.componentTypeList)}"/>
        </p:column>

        <p:column sortBy="#{componentObject.componentTypeCategoryList.toString()}" headerText="Category" 
                  filterBy="#{componentObject.componentTypeCategoryList}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByTypeCategory}"
                  rendered="#{componentController.displayTypeCategory}">
            <h:outputText value="#{componentController.displayEntityList(componentObject.componentTypeCategoryList)}"/>
        </p:column>

        <p:column sortBy="#{componentObject.entityInfo.ownerUser.username}" headerText="Owner"
                  filterBy="#{componentObject.entityInfo.ownerUser.username}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByOwnerUser}"
                  rendered="#{componentController.displayOwnerUser}">
            <h:outputText value="#{componentObject.entityInfo.ownerUser.username}"/>
        </p:column>

        <p:column sortBy="#{componentObject.entityInfo.ownerUserGroup.name}" headerText="Group"
                  filterBy="#{componentObject.entityInfo.ownerUserGroup.name}" filterMatchMode="exact"
                  filterOptions="#{userGroupController.availableItemsForSelectOne}"
                  filterValue="#{componentController.filterByOwnerGroup}"
                  rendered="#{componentController.displayOwnerGroup}">
            <h:outputText value="#{componentObject.entityInfo.ownerUserGroup.name}"/>
        </p:column>

        <p:column sortBy="#{componentObject.entityInfo.createdByUser.username}" headerText="Created By"
                  filterBy="#{componentObject.entityInfo.createdByUser.username}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByCreatedByUser}"
                  rendered="#{componentController.displayCreatedByUser}">
            <h:outputText value="#{componentObject.entityInfo.createdByUser.username}"/>
        </p:column>

        <p:column sortBy="#{componentObject.entityInfo.createdOnDateTime}" headerText="Created On"
                  filterBy="#{componentObject.entityInfo.createdOnDateTime}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByCreatedOnDateTime}"
                  rendered="#{componentController.displayCreatedOnDateTime}">
            <h:outputText value="#{componentObject.entityInfo.createdOnDateTime}"/>
        </p:column>

        <p:column sortBy="#{componentObject.entityInfo.lastModifiedByUser.username}" headerText="Modified By"
                  filterBy="#{componentObject.entityInfo.lastModifiedByUser.username}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByLastModifiedByUser}"
                  rendered="#{componentController.displayLastModifiedByUser}">
            <h:outputText value="#{componentObject.entityInfo.lastModifiedByUser.username}"/>
        </p:column>

        <p:column sortBy="#{componentObject.entityInfo.lastModifiedOnDateTime}" headerText="Modified On"
                  filterBy="#{componentObject.entityInfo.lastModifiedOnDateTime}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByLastModifiedOnDateTime}"
                  rendered="#{componentController.displayLastModifiedOnDateTime}">
            <h:outputText value="#{componentObject.entityInfo.lastModifiedOnDateTime}"/>
        </p:column>

        <p:column sortBy="#{componentObject.estimatedCost}" headerText="Estimated Cost"
                  filterBy="#{componentObject.estimatedCost}" filterMatchMode="contains"
                  filterValue="#{componentController.filterByEstimatedCost}"
                  rendered="#{componentController.displayEstimatedCost}">
            <h:outputText value="#{componentObject.estimatedCost}"/>
        </p:column>

        <c:set var="isEntityWriteable" value="#{loginController.isEntityWriteable(componentObject.entityInfo)}"/>
        <p:column headerText="Actions" exportable="false">
            <div class="actionLink">
                <p:commandLink action="#{componentController.prepareView(componentObject)}" styleClass="ui-icon ui-icon-info" title="View"/>
                <p:commandLink action="#{componentController.prepareEdit(componentObject)}" rendered="#{isEntityWriteable}" styleClass="ui-icon ui-icon-pencil" title="Edit"/>
                <p:commandLink action="#{componentController.prepareClone(componentObject)}" rendered="#{loginController.loggedIn}" styleClass="ui-icon ui-icon-copy" title="Clone"/>
                <p:commandLink oncomplete="componentDestroyWidget.show()" rendered="#{isEntityWriteable}" styleClass="ui-icon ui-icon-trash" title="Delete" update="@form">
                    <f:setPropertyActionListener value="#{componentObject}" target="#{componentController.current}"/>
                </p:commandLink>
            </div>
        </p:column>     

    </p:dataTable>

</ui:composition>


