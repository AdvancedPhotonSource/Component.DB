<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright (c) UChicago Argonne, LLC. All rights reserved.
See LICENSE file.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"                                
                xmlns:p="http://primefaces.org/ui">   

    <ui:param name="dualConfigurationViewEnabled"
              value="#{entityController.displayListConfigurationView}"/>

    <div id="dualConfigurationViewEnabled" style="display: none;">#{dualConfigurationViewEnabled}</div>
    <script type="text/javascript">
        continueWithScroll = document.getElementById('dualConfigurationViewEnabled').innerHTML == 'false';
        if (continueWithScroll) {
            scrollToSelectedNode();
        }

        function scrollToSelectedNode() {
            selectedRows = document.getElementsByClassName('ui-state-highlight ui-selected ui-treetable-selectable-node');
            if (selectedRows.length > 0) {
                row = selectedRows[0];
                row.scrollIntoView({'behavior': 'smooth', 'block': 'center'});
            }
        }
        
        function getMachineDesignId(dragDropId) {
            var index = dragDropId.lastIndexOf(":");
            
            var baseId = dragDropId.substring(0, index) + ":draggableMachineDesign";
            
            var rowItem = document.getElementById(baseId);
            idItem = rowItem.getElementsByClassName("mdId")[0];
            
            return idItem.innerHTML;
        }


        function handleDrop(event, ui) {            
            var draggable = ui.draggable[0];
            
            var draggableId = draggable.id;
            var droppableId = this.id; 
            
            var sourceId = getMachineDesignId(draggableId);
            var destinationId = getMachineDesignId(droppableId);
            
            machineDesignDropEventTrigger([{name: 'sourceId', value: sourceId}, {name: 'destinationId', value: destinationId}]); 
        }
        
        // TODO verify if fix is needed after Primefaces 6.2
        // https://forum.primefaces.org/viewtopic.php?t=26813
                
        var lastOpenedWidget; 
        var currentEvent;
        
        function showLastContextMenu() {
            if (lastOpenedWidget != null) {
                PF(lastOpenedWidget).show(currentEvent); 
            }            
            lastOpenedWidget = null;
            currentEvent = null; 
        }

        $(document).ready(function () {
            PrimeFaces.widget.ContextMenu.prototype.show = function (e) {                
                //hide other contextmenus if any
                $(document.body).children('.ui-contextmenu:visible').hide();

                if (e) {
                    currentEvent = e;
                }

                var win = $(window),
                        left = e.pageX,
                        top = e.pageY,
                        width = this.jq.outerWidth(),
                        height = this.jq.outerHeight();

                //collision detection for window boundaries
                if ((left + width) > (win.width()) + win.scrollLeft()) {
                    left = left - width;
                }
                if ((top + height) > (win.height() + win.scrollTop())) {
                    top = top - height;
                }

                if (this.cfg.beforeShow) {
                    this.cfg.beforeShow.call(this);
                }
                                
                lastOpenedWidget = this.jq[0].id;
                lastOpenedWidget = lastOpenedWidget.split(":"); 
                lastOpenedWidget = lastOpenedWidget[lastOpenedWidget.length -1];
                lastOpenedWidget = lastOpenedWidget + "Widget";                 
                
                this.jq.css({
                    'left': left,
                    'top': top,
                    'z-index': ++PrimeFaces.zindex
                }).show();

                e.preventDefault();
            };
        });
    </script>
    
    <p:remoteCommand name="machineDesignDropEventTrigger"
                     action="#{itemDomainMachineDesignController.onDropFromJS}"
                     onstart="PF('loadingDialog').show();"
                     oncomplete="PF('loadingDialog').hide();"
                     update="@form"/> 
                     

</ui:composition>


