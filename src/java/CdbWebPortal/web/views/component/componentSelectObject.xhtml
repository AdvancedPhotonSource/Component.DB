<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

    
    <p:column sortBy="#{componentObject.id}" headerText="Id"
              rendered="#{componentController.selectDisplayId}">
        <h:outputText value="#{componentObject.id}"/>
    </p:column>

    <p:column sortBy="#{componentObject.name}" headerText="Name" 
              filterBy="#{componentObject.name}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByName}"
              rendered="true">
        <h:outputText value="#{componentObject.name}"/>
    </p:column>

    <p:column sortBy="#{componentObject.description}" headerText="Description" 
              filterBy="#{componentObject.description}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByDescription}"
              rendered="#{componentController.selectDisplayDescription}">
        <h:outputText value="#{componentObject.description}"/>
    </p:column>

    <p:column sortBy="#{componentObject.componentTypeList.toString()}" headerText="Type" 
              filterBy="#{componentObject.componentTypeList}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByType}"
              rendered="#{componentController.selectDisplayType}">
        <h:outputText value="#{componentController.displayEntityList(componentObject.componentTypeList)}"/>
    </p:column>

    <p:column sortBy="#{componentObject.componentTypeCategoryList.toString()}" headerText="Category" 
              filterBy="#{componentObject.componentTypeCategoryList}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByCategory}"
              rendered="#{componentController.selectDisplayCategory}">
        <h:outputText value="#{componentController.displayEntityList(componentObject.componentTypeCategoryList)}"/>
    </p:column>

    <p:column sortBy="#{componentObject.entityInfo.ownerUser.username}" headerText="Owner"
              filterBy="#{componentObject.entityInfo.ownerUser.username}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByOwnerUser}"
              rendered="#{componentController.selectDisplayOwnerUser}">
        <h:outputText value="#{componentObject.entityInfo.ownerUser.username}"/>
    </p:column>

    <p:column sortBy="#{componentObject.entityInfo.ownerUserGroup.name}" headerText="Group"
              filterBy="#{componentObject.entityInfo.ownerUserGroup.name}" filterMatchMode="exact"
              filterOptions="#{userGroupController.availableItemsForSelectOne}"
              filterValue="#{componentController.selectFilterByOwnerGroup}"
              rendered="#{componentController.selectDisplayOwnerGroup}">
        <h:outputText value="#{componentObject.entityInfo.ownerUserGroup.name}"/>
    </p:column>

    <p:column sortBy="#{componentObject.entityInfo.createdByUser.username}" headerText="Created By"
              filterBy="#{componentObject.entityInfo.createdByUser.username}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByCreatedByUser}"
              rendered="#{componentController.selectDisplayCreatedByUser}">
        <h:outputText value="#{componentObject.entityInfo.createdByUser.username}"/>
    </p:column>

    <p:column sortBy="#{componentObject.entityInfo.createdOnDateTime}" headerText="Created On"
              filterBy="#{componentObject.entityInfo.createdOnDateTime}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByCreatedOnDateTime}"
              rendered="#{componentController.selectDisplayCreatedOnDateTime}">
        <h:outputText value="#{componentObject.entityInfo.createdOnDateTime}"/>
    </p:column>

    <p:column sortBy="#{componentObject.entityInfo.lastModifiedByUser.username}" headerText="Modified By"
              filterBy="#{componentObject.entityInfo.lastModifiedByUser.username}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByLastModifiedByUser}"
              rendered="#{componentController.selectDisplayLastModifiedByUser}">
        <h:outputText value="#{componentObject.entityInfo.lastModifiedByUser.username}"/>
    </p:column>

    <p:column sortBy="#{componentObject.entityInfo.lastModifiedOnDateTime}" headerText="Modified On"
              filterBy="#{componentObject.entityInfo.lastModifiedOnDateTime}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByLastModifiedOnDateTime}"
              rendered="#{componentController.selectDisplayLastModifiedOnDateTime}">
        <h:outputText value="#{componentObject.entityInfo.lastModifiedOnDateTime}"/>
    </p:column>
    
    <p:column sortBy="#{componentObject.estimatedCost}" headerText="Estimated Cost"
              filterBy="#{componentObject.estimatedCost}" filterMatchMode="contains"
              filterValue="#{componentController.selectFilterByEstimatedCost}"
              rendered="#{componentController.selectDisplayEstimatedCost}">
        <h:outputText value="#{componentObject.estimatedCost}"/>
    </p:column>

</ui:composition>


