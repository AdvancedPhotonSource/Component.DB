/*
 * Copyright (c) UChicago Argonne, LLC. All rights reserved.
 * See LICENSE file.
 */
package gov.anl.aps.cdb.portal.controllers.extensions;

import gov.anl.aps.cdb.portal.controllers.ItemDomainCableDesignWizardBase;
import gov.anl.aps.cdb.portal.utilities.SessionUtility;
import java.io.Serializable;
import javax.enterprise.context.SessionScoped;
import javax.inject.Named;

/**
 * Controller for adding cable bundles.
 *
 * @author cmcchesney
 */
@Named(BundleWizard.CONTROLLER_NAMED)
@SessionScoped
public class BundleWizard extends ItemDomainCableDesignWizardBase implements Serializable {

    public static final String CONTROLLER_NAMED = "bundleWizard";
    protected static final String tabBundleOptions = "BundleOptionsTab";

    private boolean addMembers = false;
    private boolean createSpares = false;

    public static BundleWizard getInstance() {
        return (BundleWizard) SessionUtility.findBean(BundleWizard.CONTROLLER_NAMED);
    }

    public boolean isAddMembers() {
        return addMembers;
    }

    public void setAddMembers(boolean addMembers) {
        this.addMembers = addMembers;
    }

    public boolean isCreateSpares() {
        return createSpares;
    }

    public void setCreateSpares(boolean createSpares) {
        this.createSpares = createSpares;
    }

    /**
     * Handles select events generated by the "add existing cables" checkbox.
     */
    public void selectListenerAddMembers() {
        setEnablementForCurrentTab();
    }

    /**
     * Handles select events generated by the "add spares" checkbox.
     */
    public void selectListenerCreateSpares() {
        setEnablementForCurrentTab();
    }

    /**
     * Resets models for wizard components.
     */
    @Override
    protected void reset_() {
        addMembers = false;
        createSpares = false;
    }

    /**
     * Returns custom tab navigation based on wizard state. Subclass should
     * override for custom behavior.
     */
    @Override
    public String nextTab_(String currStep, String nextStep) {

        String nextTab = nextStep;

        // skip members tab if "add members" not selected
        if ((nextStep.endsWith(tabMembers)) && (!isAddMembers())) {
            if (currStep.endsWith(tabBundleOptions)) {
                nextTab = CONTROLLER_NAMED + tabReview;
            } else if (currStep.endsWith(tabReview)) {
                nextTab = CONTROLLER_NAMED + tabBundleOptions;
            }
        }

        return nextTab;
    }

    /**
     * Sets enable/disable state for the navigation buttons based on the current
     * tab and input elements.
     */
    @Override
    protected void setEnablement_(String tab) {

        if (tab.endsWith(tabBundleOptions)) {
            disableButtonPrev = false;
            disableButtonCancel = false;
            disableButtonSave = true;
            if (addMembers || createSpares) {
                disableButtonNext = false;
            } else {
                disableButtonNext = true;
            }
        }
    }

    /**
     * Implements the save operation, invoked by the wizard's "Save" navigation
     * button.
     */
    public String save() {

        SessionUtility.addErrorMessage(
                "Could not save cable bundle",
                "Feature not yet implemented.");
        return "";
    }

}
