Overview of a CFW application
-----------------------------

Creating a CFW application requires the following JAR files:
	cfw.jar - basic application GUI components
	cfw-ext.jar - third party code which cfw depends on

The following additional two are used for IRMIS applications:
	concurrent.jar - APS addition providing background job capability
	irmisDb.jar - IRMIS database access objects

These are included and packaged with the Demo application in this
directory. All CFW applications have a MVC (Model-View-Controller)
structure, reflected clearly in the files you must create.

The essential Demo application in this directory consists of the following files:

	Main.java - Kicks off the CFW Desktop, within which you can add and manage
                    one or more separate "Document"-based applications. 

        resources - directory with files for desktop "help" menu,
                    along with a means to control menubar entries.

    --- each window managed within the desktop is a sub-application with the following ---

	DemoDocument.java - The application "controller" which does your business
                            logic (ie. database queries, file input/output, etc...)

	DemoModel.java - The application "model" which contains the data your 
                         application works with.

	DemoWindow.java - The application "view" which builds and manages the
                          GUI of the application. This class is a "view" of
                          the data in your model. Button clicks here kick off
                          actions in the Document, which then in turn updates
                          the Model, and finally the Window renders the new
                          model data.

        DemoModelEvent.java - Definition of possible changes in the model which
                              are used to notify the Window that something in the
                              view needs to be updated and redrawn.

        DemoModelListener.java - simple interface definition implemented by any
                                 class that wants to recieve notifications that
                                 the data Model has changed.


